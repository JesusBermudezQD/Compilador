
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CADENA COMILLAS CORCHETE1 CORCHETE2 DE DELIMITADOR1 DELIMITADOR2 DIFERENTE DURANTE ENTERO ENTRE ID IGUAL IGUALIGUAL LETRA MAS MAYOR MAYORQUE MENOR MENORQUE MENOS NUMERO POR SEPARADOR SI SINOcuerpo_fun : lista_sentencias cuerpo_estructura : DELIMITADOR1 lista_sentencias DELIMITADOR2lista_sentencias : lista_sentencias sentencias \n    |   emptysentencias : var_declaration\n    |   fun_declaraciones \n    |   emptyvar_declaration : ENTERO ID\n    |   LETRA ID\n    |   ENTERO ID IGUAL NUMERO\n    |   ENTERO ID IGUAL ID\n    |   LETRA ID IGUAL ID \n    |   LETRA ID IGUAL CADENA\n    |   empty fun_declaraciones : fun_iteracion fun_declaraciones\n    |   emptyfun_iteracion : DE CORCHETE1 var IGUAL NUMERO SEPARADOR var IGUALIGUAL NUMERO CORCHETE2 cuerpo_estructura\n    |   DURANTE CORCHETE1 expression CORCHETE2 cuerpo_estructura \n    |   SI CORCHETE1 expression CORCHETE2 cuerpo_estructura\n    |   SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO cuerpo_estructura\n    |   SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO SI CORCHETE1 expression CORCHETE2 cuerpo_estructuraexpression : var operadores var\n    | NUMERO operadores NUMERO\n    | NUMERO operadores var\n    | var operadores NUMERO operadores : MENOR \n    |   MENORQUE\n    |   MAYOR\n    |   MAYORQUE\n    |   DIFERENTE\n    |   IGUALIGUALvar : IDempty :'
    
_lr_action_items = {'ENTERO':([0,2,3,4,5,6,7,10,14,15,16,17,29,30,31,32,45,46,51,53,56,58,65,66,],[-33,8,-4,-3,-5,-6,-7,-33,-8,-9,-15,-16,-11,-10,-12,-13,-18,-33,-19,8,-2,-20,-17,-21,]),'LETRA':([0,2,3,4,5,6,7,10,14,15,16,17,29,30,31,32,45,46,51,53,56,58,65,66,],[-33,9,-4,-3,-5,-6,-7,-33,-8,-9,-15,-16,-11,-10,-12,-13,-18,-33,-19,9,-2,-20,-17,-21,]),'DE':([0,2,3,4,5,6,7,10,14,15,16,17,29,30,31,32,45,46,51,53,56,58,65,66,],[-33,11,-4,-3,-5,-6,-7,11,-8,-9,-15,-16,-11,-10,-12,-13,-18,-33,-19,11,-2,-20,-17,-21,]),'DURANTE':([0,2,3,4,5,6,7,10,14,15,16,17,29,30,31,32,45,46,51,53,56,58,65,66,],[-33,12,-4,-3,-5,-6,-7,12,-8,-9,-15,-16,-11,-10,-12,-13,-18,-33,-19,12,-2,-20,-17,-21,]),'SI':([0,2,3,4,5,6,7,10,14,15,16,17,29,30,31,32,45,46,51,53,54,56,58,65,66,],[-33,13,-4,-3,-5,-6,-7,13,-8,-9,-15,-16,-11,-10,-12,-13,-18,-33,-19,13,57,-2,-20,-17,-21,]),'$end':([0,1,2,3,4,5,6,7,10,14,15,16,17,29,30,31,32,45,51,56,58,65,66,],[-33,0,-1,-4,-3,-5,-6,-7,-33,-8,-9,-15,-16,-11,-10,-12,-13,-18,-19,-2,-20,-17,-21,]),'DELIMITADOR2':([3,4,5,6,7,10,14,15,16,17,29,30,31,32,45,46,51,53,56,58,65,66,],[-4,-3,-5,-6,-7,-33,-8,-9,-15,-16,-11,-10,-12,-13,-18,-33,-19,56,-2,-20,-17,-21,]),'ID':([8,9,18,19,20,21,22,35,36,37,38,39,40,41,42,52,60,],[14,15,24,24,24,29,31,24,-26,-27,-28,-29,-30,-31,24,24,24,]),'CORCHETE1':([11,12,13,57,],[18,19,20,60,]),'IGUAL':([14,15,23,24,],[21,22,33,-32,]),'NUMERO':([19,20,21,33,35,36,37,38,39,40,41,42,59,60,],[27,27,30,44,48,-26,-27,-28,-29,-30,-31,49,61,27,]),'CADENA':([22,],[32,]),'MENOR':([24,26,27,],[-32,36,36,]),'MENORQUE':([24,26,27,],[-32,37,37,]),'MAYOR':([24,26,27,],[-32,38,38,]),'MAYORQUE':([24,26,27,],[-32,39,39,]),'DIFERENTE':([24,26,27,],[-32,40,40,]),'IGUALIGUAL':([24,26,27,55,],[-32,41,41,59,]),'CORCHETE2':([24,25,28,47,48,49,50,61,62,],[-32,34,43,-22,-25,-23,-24,63,64,]),'DELIMITADOR1':([34,43,54,63,64,],[46,46,46,46,46,]),'SEPARADOR':([44,],[52,]),'SINO':([51,56,],[54,-2,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo_fun':([0,],[1,]),'lista_sentencias':([0,46,],[2,53,]),'empty':([0,2,10,46,53,],[3,7,17,3,7,]),'sentencias':([2,53,],[4,4,]),'var_declaration':([2,53,],[5,5,]),'fun_declaraciones':([2,10,53,],[6,16,6,]),'fun_iteracion':([2,10,53,],[10,10,10,]),'var':([18,19,20,35,42,52,60,],[23,26,26,47,50,55,26,]),'expression':([19,20,60,],[25,28,62,]),'operadores':([26,27,],[35,42,]),'cuerpo_estructura':([34,43,54,63,64,],[45,51,58,65,66,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo_fun","S'",1,None,None,None),
  ('cuerpo_fun -> lista_sentencias','cuerpo_fun',1,'p_cuerpo_fun','parser.py',13),
  ('cuerpo_estructura -> DELIMITADOR1 lista_sentencias DELIMITADOR2','cuerpo_estructura',3,'p_cuerpo_estructura','parser.py',18),
  ('lista_sentencias -> lista_sentencias sentencias','lista_sentencias',2,'p_lista_sentencias','parser.py',23),
  ('lista_sentencias -> empty','lista_sentencias',1,'p_lista_sentencias','parser.py',24),
  ('sentencias -> var_declaration','sentencias',1,'p_sentencias','parser.py',31),
  ('sentencias -> fun_declaraciones','sentencias',1,'p_sentencias','parser.py',32),
  ('sentencias -> empty','sentencias',1,'p_sentencias','parser.py',33),
  ('var_declaration -> ENTERO ID','var_declaration',2,'p_var_declaration','parser.py',38),
  ('var_declaration -> LETRA ID','var_declaration',2,'p_var_declaration','parser.py',39),
  ('var_declaration -> ENTERO ID IGUAL NUMERO','var_declaration',4,'p_var_declaration','parser.py',40),
  ('var_declaration -> ENTERO ID IGUAL ID','var_declaration',4,'p_var_declaration','parser.py',41),
  ('var_declaration -> LETRA ID IGUAL ID','var_declaration',4,'p_var_declaration','parser.py',42),
  ('var_declaration -> LETRA ID IGUAL CADENA','var_declaration',4,'p_var_declaration','parser.py',43),
  ('var_declaration -> empty','var_declaration',1,'p_var_declaration','parser.py',44),
  ('fun_declaraciones -> fun_iteracion fun_declaraciones','fun_declaraciones',2,'p_fun_declaraciones','parser.py',48),
  ('fun_declaraciones -> empty','fun_declaraciones',1,'p_fun_declaraciones','parser.py',49),
  ('fun_iteracion -> DE CORCHETE1 var IGUAL NUMERO SEPARADOR var IGUALIGUAL NUMERO CORCHETE2 cuerpo_estructura','fun_iteracion',11,'p_fun_iteracion','parser.py',53),
  ('fun_iteracion -> DURANTE CORCHETE1 expression CORCHETE2 cuerpo_estructura','fun_iteracion',5,'p_fun_iteracion','parser.py',54),
  ('fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura','fun_iteracion',5,'p_fun_iteracion','parser.py',55),
  ('fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO cuerpo_estructura','fun_iteracion',7,'p_fun_iteracion','parser.py',56),
  ('fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO SI CORCHETE1 expression CORCHETE2 cuerpo_estructura','fun_iteracion',11,'p_fun_iteracion','parser.py',57),
  ('expression -> var operadores var','expression',3,'p_expression','parser.py',62),
  ('expression -> NUMERO operadores NUMERO','expression',3,'p_expression','parser.py',63),
  ('expression -> NUMERO operadores var','expression',3,'p_expression','parser.py',64),
  ('expression -> var operadores NUMERO','expression',3,'p_expression','parser.py',65),
  ('operadores -> MENOR','operadores',1,'p_operadores','parser.py',71),
  ('operadores -> MENORQUE','operadores',1,'p_operadores','parser.py',72),
  ('operadores -> MAYOR','operadores',1,'p_operadores','parser.py',73),
  ('operadores -> MAYORQUE','operadores',1,'p_operadores','parser.py',74),
  ('operadores -> DIFERENTE','operadores',1,'p_operadores','parser.py',75),
  ('operadores -> IGUALIGUAL','operadores',1,'p_operadores','parser.py',76),
  ('var -> ID','var',1,'p_var','parser.py',87),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',92),
]
