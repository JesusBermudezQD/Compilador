Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMILLAS
    ENTRE
    MAS
    MENOS
    POR

Grammar

Rule 0     S' -> cuerpo_fun
Rule 1     cuerpo_fun -> lista_sentencias
Rule 2     cuerpo_estructura -> DELIMITADOR1 lista_sentencias DELIMITADOR2
Rule 3     lista_sentencias -> lista_sentencias sentencias
Rule 4     lista_sentencias -> empty
Rule 5     sentencias -> var_declaration
Rule 6     sentencias -> fun_declaraciones
Rule 7     sentencias -> empty
Rule 8     var_declaration -> ENTERO ID
Rule 9     var_declaration -> LETRA ID
Rule 10    var_declaration -> ENTERO ID IGUAL NUMERO
Rule 11    var_declaration -> ENTERO ID IGUAL ID
Rule 12    var_declaration -> LETRA ID IGUAL ID
Rule 13    var_declaration -> LETRA ID IGUAL CADENA
Rule 14    var_declaration -> empty
Rule 15    fun_declaraciones -> fun_iteracion fun_declaraciones
Rule 16    fun_declaraciones -> empty
Rule 17    fun_iteracion -> DE CORCHETE1 var IGUAL NUMERO SEPARADOR var IGUALIGUAL NUMERO CORCHETE2 cuerpo_estructura
Rule 18    fun_iteracion -> DURANTE CORCHETE1 expression CORCHETE2 cuerpo_estructura
Rule 19    fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura
Rule 20    fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO cuerpo_estructura
Rule 21    fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO SI CORCHETE1 expression CORCHETE2 cuerpo_estructura
Rule 22    expression -> var operadores var
Rule 23    expression -> NUMERO operadores NUMERO
Rule 24    expression -> NUMERO operadores var
Rule 25    expression -> var operadores NUMERO
Rule 26    operadores -> MENOR
Rule 27    operadores -> MENORQUE
Rule 28    operadores -> MAYOR
Rule 29    operadores -> MAYORQUE
Rule 30    operadores -> DIFERENTE
Rule 31    operadores -> IGUALIGUAL
Rule 32    var -> ID
Rule 33    empty -> <empty>

Terminals, with rules where they appear

CADENA               : 13
COMILLAS             : 
CORCHETE1            : 17 18 19 20 21 21
CORCHETE2            : 17 18 19 20 21 21
DE                   : 17
DELIMITADOR1         : 2
DELIMITADOR2         : 2
DIFERENTE            : 30
DURANTE              : 18
ENTERO               : 8 10 11
ENTRE                : 
ID                   : 8 9 10 11 11 12 12 13 32
IGUAL                : 10 11 12 13 17
IGUALIGUAL           : 17 31
LETRA                : 9 12 13
MAS                  : 
MAYOR                : 28
MAYORQUE             : 29
MENOR                : 26
MENORQUE             : 27
MENOS                : 
NUMERO               : 10 17 17 23 23 24 25
POR                  : 
SEPARADOR            : 17
SI                   : 19 20 21 21
SINO                 : 20 21
error                : 

Nonterminals, with rules where they appear

cuerpo_estructura    : 17 18 19 20 20 21 21
cuerpo_fun           : 0
empty                : 4 7 14 16
expression           : 18 19 20 21 21
fun_declaraciones    : 6 15
fun_iteracion        : 15
lista_sentencias     : 1 2 3
operadores           : 22 23 24 25
sentencias           : 3
var                  : 17 17 22 22 24 25
var_declaration      : 5

Parsing method: LALR

state 0

    (0) S' -> . cuerpo_fun
    (1) cuerpo_fun -> . lista_sentencias
    (3) lista_sentencias -> . lista_sentencias sentencias
    (4) lista_sentencias -> . empty
    (33) empty -> .

    ENTERO          reduce using rule 33 (empty -> .)
    LETRA           reduce using rule 33 (empty -> .)
    DE              reduce using rule 33 (empty -> .)
    DURANTE         reduce using rule 33 (empty -> .)
    SI              reduce using rule 33 (empty -> .)
    $end            reduce using rule 33 (empty -> .)

    cuerpo_fun                     shift and go to state 1
    lista_sentencias               shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> cuerpo_fun .



state 2

    (1) cuerpo_fun -> lista_sentencias .
    (3) lista_sentencias -> lista_sentencias . sentencias
    (5) sentencias -> . var_declaration
    (6) sentencias -> . fun_declaraciones
    (7) sentencias -> . empty
    (8) var_declaration -> . ENTERO ID
    (9) var_declaration -> . LETRA ID
    (10) var_declaration -> . ENTERO ID IGUAL NUMERO
    (11) var_declaration -> . ENTERO ID IGUAL ID
    (12) var_declaration -> . LETRA ID IGUAL ID
    (13) var_declaration -> . LETRA ID IGUAL CADENA
    (14) var_declaration -> . empty
    (15) fun_declaraciones -> . fun_iteracion fun_declaraciones
    (16) fun_declaraciones -> . empty
    (33) empty -> .
    (17) fun_iteracion -> . DE CORCHETE1 var IGUAL NUMERO SEPARADOR var IGUALIGUAL NUMERO CORCHETE2 cuerpo_estructura
    (18) fun_iteracion -> . DURANTE CORCHETE1 expression CORCHETE2 cuerpo_estructura
    (19) fun_iteracion -> . SI CORCHETE1 expression CORCHETE2 cuerpo_estructura
    (20) fun_iteracion -> . SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO cuerpo_estructura
    (21) fun_iteracion -> . SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO SI CORCHETE1 expression CORCHETE2 cuerpo_estructura

  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for LETRA resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 1 (cuerpo_fun -> lista_sentencias .)
  ! shift/reduce conflict for DE resolved as shift
  ! shift/reduce conflict for DURANTE resolved as shift
  ! shift/reduce conflict for SI resolved as shift
    $end            reduce using rule 1 (cuerpo_fun -> lista_sentencias .)
    ENTERO          shift and go to state 8
    LETRA           shift and go to state 9
    DE              shift and go to state 11
    DURANTE         shift and go to state 12
    SI              shift and go to state 13

  ! ENTERO          [ reduce using rule 33 (empty -> .) ]
  ! LETRA           [ reduce using rule 33 (empty -> .) ]
  ! DE              [ reduce using rule 33 (empty -> .) ]
  ! DURANTE         [ reduce using rule 33 (empty -> .) ]
  ! SI              [ reduce using rule 33 (empty -> .) ]
  ! $end            [ reduce using rule 33 (empty -> .) ]

    sentencias                     shift and go to state 4
    var_declaration                shift and go to state 5
    fun_declaraciones              shift and go to state 6
    empty                          shift and go to state 7
    fun_iteracion                  shift and go to state 10

state 3

    (4) lista_sentencias -> empty .

    ENTERO          reduce using rule 4 (lista_sentencias -> empty .)
    LETRA           reduce using rule 4 (lista_sentencias -> empty .)
    DE              reduce using rule 4 (lista_sentencias -> empty .)
    DURANTE         reduce using rule 4 (lista_sentencias -> empty .)
    SI              reduce using rule 4 (lista_sentencias -> empty .)
    $end            reduce using rule 4 (lista_sentencias -> empty .)
    DELIMITADOR2    reduce using rule 4 (lista_sentencias -> empty .)


state 4

    (3) lista_sentencias -> lista_sentencias sentencias .

    ENTERO          reduce using rule 3 (lista_sentencias -> lista_sentencias sentencias .)
    LETRA           reduce using rule 3 (lista_sentencias -> lista_sentencias sentencias .)
    DE              reduce using rule 3 (lista_sentencias -> lista_sentencias sentencias .)
    DURANTE         reduce using rule 3 (lista_sentencias -> lista_sentencias sentencias .)
    SI              reduce using rule 3 (lista_sentencias -> lista_sentencias sentencias .)
    $end            reduce using rule 3 (lista_sentencias -> lista_sentencias sentencias .)
    DELIMITADOR2    reduce using rule 3 (lista_sentencias -> lista_sentencias sentencias .)


state 5

    (5) sentencias -> var_declaration .

    ENTERO          reduce using rule 5 (sentencias -> var_declaration .)
    LETRA           reduce using rule 5 (sentencias -> var_declaration .)
    DE              reduce using rule 5 (sentencias -> var_declaration .)
    DURANTE         reduce using rule 5 (sentencias -> var_declaration .)
    SI              reduce using rule 5 (sentencias -> var_declaration .)
    $end            reduce using rule 5 (sentencias -> var_declaration .)
    DELIMITADOR2    reduce using rule 5 (sentencias -> var_declaration .)


state 6

    (6) sentencias -> fun_declaraciones .

    ENTERO          reduce using rule 6 (sentencias -> fun_declaraciones .)
    LETRA           reduce using rule 6 (sentencias -> fun_declaraciones .)
    DE              reduce using rule 6 (sentencias -> fun_declaraciones .)
    DURANTE         reduce using rule 6 (sentencias -> fun_declaraciones .)
    SI              reduce using rule 6 (sentencias -> fun_declaraciones .)
    $end            reduce using rule 6 (sentencias -> fun_declaraciones .)
    DELIMITADOR2    reduce using rule 6 (sentencias -> fun_declaraciones .)


state 7

    (7) sentencias -> empty .
    (14) var_declaration -> empty .
    (16) fun_declaraciones -> empty .

  ! reduce/reduce conflict for ENTERO resolved using rule 7 (sentencias -> empty .)
  ! reduce/reduce conflict for LETRA resolved using rule 7 (sentencias -> empty .)
  ! reduce/reduce conflict for DE resolved using rule 7 (sentencias -> empty .)
  ! reduce/reduce conflict for DURANTE resolved using rule 7 (sentencias -> empty .)
  ! reduce/reduce conflict for SI resolved using rule 7 (sentencias -> empty .)
  ! reduce/reduce conflict for $end resolved using rule 7 (sentencias -> empty .)
  ! reduce/reduce conflict for DELIMITADOR2 resolved using rule 7 (sentencias -> empty .)
  ! reduce/reduce conflict for ENTERO resolved using rule 7 (sentencias -> empty .)
  ! reduce/reduce conflict for LETRA resolved using rule 7 (sentencias -> empty .)
  ! reduce/reduce conflict for DE resolved using rule 7 (sentencias -> empty .)
  ! reduce/reduce conflict for DURANTE resolved using rule 7 (sentencias -> empty .)
  ! reduce/reduce conflict for SI resolved using rule 7 (sentencias -> empty .)
  ! reduce/reduce conflict for $end resolved using rule 7 (sentencias -> empty .)
  ! reduce/reduce conflict for DELIMITADOR2 resolved using rule 7 (sentencias -> empty .)
    ENTERO          reduce using rule 7 (sentencias -> empty .)
    LETRA           reduce using rule 7 (sentencias -> empty .)
    DE              reduce using rule 7 (sentencias -> empty .)
    DURANTE         reduce using rule 7 (sentencias -> empty .)
    SI              reduce using rule 7 (sentencias -> empty .)
    $end            reduce using rule 7 (sentencias -> empty .)
    DELIMITADOR2    reduce using rule 7 (sentencias -> empty .)

  ! ENTERO          [ reduce using rule 14 (var_declaration -> empty .) ]
  ! LETRA           [ reduce using rule 14 (var_declaration -> empty .) ]
  ! DE              [ reduce using rule 14 (var_declaration -> empty .) ]
  ! DURANTE         [ reduce using rule 14 (var_declaration -> empty .) ]
  ! SI              [ reduce using rule 14 (var_declaration -> empty .) ]
  ! $end            [ reduce using rule 14 (var_declaration -> empty .) ]
  ! DELIMITADOR2    [ reduce using rule 14 (var_declaration -> empty .) ]
  ! ENTERO          [ reduce using rule 16 (fun_declaraciones -> empty .) ]
  ! LETRA           [ reduce using rule 16 (fun_declaraciones -> empty .) ]
  ! DE              [ reduce using rule 16 (fun_declaraciones -> empty .) ]
  ! DURANTE         [ reduce using rule 16 (fun_declaraciones -> empty .) ]
  ! SI              [ reduce using rule 16 (fun_declaraciones -> empty .) ]
  ! $end            [ reduce using rule 16 (fun_declaraciones -> empty .) ]
  ! DELIMITADOR2    [ reduce using rule 16 (fun_declaraciones -> empty .) ]


state 8

    (8) var_declaration -> ENTERO . ID
    (10) var_declaration -> ENTERO . ID IGUAL NUMERO
    (11) var_declaration -> ENTERO . ID IGUAL ID

    ID              shift and go to state 14


state 9

    (9) var_declaration -> LETRA . ID
    (12) var_declaration -> LETRA . ID IGUAL ID
    (13) var_declaration -> LETRA . ID IGUAL CADENA

    ID              shift and go to state 15


state 10

    (15) fun_declaraciones -> fun_iteracion . fun_declaraciones
    (15) fun_declaraciones -> . fun_iteracion fun_declaraciones
    (16) fun_declaraciones -> . empty
    (17) fun_iteracion -> . DE CORCHETE1 var IGUAL NUMERO SEPARADOR var IGUALIGUAL NUMERO CORCHETE2 cuerpo_estructura
    (18) fun_iteracion -> . DURANTE CORCHETE1 expression CORCHETE2 cuerpo_estructura
    (19) fun_iteracion -> . SI CORCHETE1 expression CORCHETE2 cuerpo_estructura
    (20) fun_iteracion -> . SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO cuerpo_estructura
    (21) fun_iteracion -> . SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO SI CORCHETE1 expression CORCHETE2 cuerpo_estructura
    (33) empty -> .

  ! shift/reduce conflict for DE resolved as shift
  ! shift/reduce conflict for DURANTE resolved as shift
  ! shift/reduce conflict for SI resolved as shift
    DE              shift and go to state 11
    DURANTE         shift and go to state 12
    SI              shift and go to state 13
    ENTERO          reduce using rule 33 (empty -> .)
    LETRA           reduce using rule 33 (empty -> .)
    $end            reduce using rule 33 (empty -> .)
    DELIMITADOR2    reduce using rule 33 (empty -> .)

  ! DE              [ reduce using rule 33 (empty -> .) ]
  ! DURANTE         [ reduce using rule 33 (empty -> .) ]
  ! SI              [ reduce using rule 33 (empty -> .) ]

    fun_iteracion                  shift and go to state 10
    fun_declaraciones              shift and go to state 16
    empty                          shift and go to state 17

state 11

    (17) fun_iteracion -> DE . CORCHETE1 var IGUAL NUMERO SEPARADOR var IGUALIGUAL NUMERO CORCHETE2 cuerpo_estructura

    CORCHETE1       shift and go to state 18


state 12

    (18) fun_iteracion -> DURANTE . CORCHETE1 expression CORCHETE2 cuerpo_estructura

    CORCHETE1       shift and go to state 19


state 13

    (19) fun_iteracion -> SI . CORCHETE1 expression CORCHETE2 cuerpo_estructura
    (20) fun_iteracion -> SI . CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO cuerpo_estructura
    (21) fun_iteracion -> SI . CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO SI CORCHETE1 expression CORCHETE2 cuerpo_estructura

    CORCHETE1       shift and go to state 20


state 14

    (8) var_declaration -> ENTERO ID .
    (10) var_declaration -> ENTERO ID . IGUAL NUMERO
    (11) var_declaration -> ENTERO ID . IGUAL ID

    ENTERO          reduce using rule 8 (var_declaration -> ENTERO ID .)
    LETRA           reduce using rule 8 (var_declaration -> ENTERO ID .)
    DE              reduce using rule 8 (var_declaration -> ENTERO ID .)
    DURANTE         reduce using rule 8 (var_declaration -> ENTERO ID .)
    SI              reduce using rule 8 (var_declaration -> ENTERO ID .)
    $end            reduce using rule 8 (var_declaration -> ENTERO ID .)
    DELIMITADOR2    reduce using rule 8 (var_declaration -> ENTERO ID .)
    IGUAL           shift and go to state 21


state 15

    (9) var_declaration -> LETRA ID .
    (12) var_declaration -> LETRA ID . IGUAL ID
    (13) var_declaration -> LETRA ID . IGUAL CADENA

    ENTERO          reduce using rule 9 (var_declaration -> LETRA ID .)
    LETRA           reduce using rule 9 (var_declaration -> LETRA ID .)
    DE              reduce using rule 9 (var_declaration -> LETRA ID .)
    DURANTE         reduce using rule 9 (var_declaration -> LETRA ID .)
    SI              reduce using rule 9 (var_declaration -> LETRA ID .)
    $end            reduce using rule 9 (var_declaration -> LETRA ID .)
    DELIMITADOR2    reduce using rule 9 (var_declaration -> LETRA ID .)
    IGUAL           shift and go to state 22


state 16

    (15) fun_declaraciones -> fun_iteracion fun_declaraciones .

    ENTERO          reduce using rule 15 (fun_declaraciones -> fun_iteracion fun_declaraciones .)
    LETRA           reduce using rule 15 (fun_declaraciones -> fun_iteracion fun_declaraciones .)
    DE              reduce using rule 15 (fun_declaraciones -> fun_iteracion fun_declaraciones .)
    DURANTE         reduce using rule 15 (fun_declaraciones -> fun_iteracion fun_declaraciones .)
    SI              reduce using rule 15 (fun_declaraciones -> fun_iteracion fun_declaraciones .)
    $end            reduce using rule 15 (fun_declaraciones -> fun_iteracion fun_declaraciones .)
    DELIMITADOR2    reduce using rule 15 (fun_declaraciones -> fun_iteracion fun_declaraciones .)


state 17

    (16) fun_declaraciones -> empty .

    ENTERO          reduce using rule 16 (fun_declaraciones -> empty .)
    LETRA           reduce using rule 16 (fun_declaraciones -> empty .)
    DE              reduce using rule 16 (fun_declaraciones -> empty .)
    DURANTE         reduce using rule 16 (fun_declaraciones -> empty .)
    SI              reduce using rule 16 (fun_declaraciones -> empty .)
    $end            reduce using rule 16 (fun_declaraciones -> empty .)
    DELIMITADOR2    reduce using rule 16 (fun_declaraciones -> empty .)


state 18

    (17) fun_iteracion -> DE CORCHETE1 . var IGUAL NUMERO SEPARADOR var IGUALIGUAL NUMERO CORCHETE2 cuerpo_estructura
    (32) var -> . ID

    ID              shift and go to state 24

    var                            shift and go to state 23

state 19

    (18) fun_iteracion -> DURANTE CORCHETE1 . expression CORCHETE2 cuerpo_estructura
    (22) expression -> . var operadores var
    (23) expression -> . NUMERO operadores NUMERO
    (24) expression -> . NUMERO operadores var
    (25) expression -> . var operadores NUMERO
    (32) var -> . ID

    NUMERO          shift and go to state 27
    ID              shift and go to state 24

    expression                     shift and go to state 25
    var                            shift and go to state 26

state 20

    (19) fun_iteracion -> SI CORCHETE1 . expression CORCHETE2 cuerpo_estructura
    (20) fun_iteracion -> SI CORCHETE1 . expression CORCHETE2 cuerpo_estructura SINO cuerpo_estructura
    (21) fun_iteracion -> SI CORCHETE1 . expression CORCHETE2 cuerpo_estructura SINO SI CORCHETE1 expression CORCHETE2 cuerpo_estructura
    (22) expression -> . var operadores var
    (23) expression -> . NUMERO operadores NUMERO
    (24) expression -> . NUMERO operadores var
    (25) expression -> . var operadores NUMERO
    (32) var -> . ID

    NUMERO          shift and go to state 27
    ID              shift and go to state 24

    expression                     shift and go to state 28
    var                            shift and go to state 26

state 21

    (10) var_declaration -> ENTERO ID IGUAL . NUMERO
    (11) var_declaration -> ENTERO ID IGUAL . ID

    NUMERO          shift and go to state 30
    ID              shift and go to state 29


state 22

    (12) var_declaration -> LETRA ID IGUAL . ID
    (13) var_declaration -> LETRA ID IGUAL . CADENA

    ID              shift and go to state 31
    CADENA          shift and go to state 32


state 23

    (17) fun_iteracion -> DE CORCHETE1 var . IGUAL NUMERO SEPARADOR var IGUALIGUAL NUMERO CORCHETE2 cuerpo_estructura

    IGUAL           shift and go to state 33


state 24

    (32) var -> ID .

    IGUAL           reduce using rule 32 (var -> ID .)
    MENOR           reduce using rule 32 (var -> ID .)
    MENORQUE        reduce using rule 32 (var -> ID .)
    MAYOR           reduce using rule 32 (var -> ID .)
    MAYORQUE        reduce using rule 32 (var -> ID .)
    DIFERENTE       reduce using rule 32 (var -> ID .)
    IGUALIGUAL      reduce using rule 32 (var -> ID .)
    CORCHETE2       reduce using rule 32 (var -> ID .)


state 25

    (18) fun_iteracion -> DURANTE CORCHETE1 expression . CORCHETE2 cuerpo_estructura

    CORCHETE2       shift and go to state 34


state 26

    (22) expression -> var . operadores var
    (25) expression -> var . operadores NUMERO
    (26) operadores -> . MENOR
    (27) operadores -> . MENORQUE
    (28) operadores -> . MAYOR
    (29) operadores -> . MAYORQUE
    (30) operadores -> . DIFERENTE
    (31) operadores -> . IGUALIGUAL

    MENOR           shift and go to state 36
    MENORQUE        shift and go to state 37
    MAYOR           shift and go to state 38
    MAYORQUE        shift and go to state 39
    DIFERENTE       shift and go to state 40
    IGUALIGUAL      shift and go to state 41

    operadores                     shift and go to state 35

state 27

    (23) expression -> NUMERO . operadores NUMERO
    (24) expression -> NUMERO . operadores var
    (26) operadores -> . MENOR
    (27) operadores -> . MENORQUE
    (28) operadores -> . MAYOR
    (29) operadores -> . MAYORQUE
    (30) operadores -> . DIFERENTE
    (31) operadores -> . IGUALIGUAL

    MENOR           shift and go to state 36
    MENORQUE        shift and go to state 37
    MAYOR           shift and go to state 38
    MAYORQUE        shift and go to state 39
    DIFERENTE       shift and go to state 40
    IGUALIGUAL      shift and go to state 41

    operadores                     shift and go to state 42

state 28

    (19) fun_iteracion -> SI CORCHETE1 expression . CORCHETE2 cuerpo_estructura
    (20) fun_iteracion -> SI CORCHETE1 expression . CORCHETE2 cuerpo_estructura SINO cuerpo_estructura
    (21) fun_iteracion -> SI CORCHETE1 expression . CORCHETE2 cuerpo_estructura SINO SI CORCHETE1 expression CORCHETE2 cuerpo_estructura

    CORCHETE2       shift and go to state 43


state 29

    (11) var_declaration -> ENTERO ID IGUAL ID .

    ENTERO          reduce using rule 11 (var_declaration -> ENTERO ID IGUAL ID .)
    LETRA           reduce using rule 11 (var_declaration -> ENTERO ID IGUAL ID .)
    DE              reduce using rule 11 (var_declaration -> ENTERO ID IGUAL ID .)
    DURANTE         reduce using rule 11 (var_declaration -> ENTERO ID IGUAL ID .)
    SI              reduce using rule 11 (var_declaration -> ENTERO ID IGUAL ID .)
    $end            reduce using rule 11 (var_declaration -> ENTERO ID IGUAL ID .)
    DELIMITADOR2    reduce using rule 11 (var_declaration -> ENTERO ID IGUAL ID .)


state 30

    (10) var_declaration -> ENTERO ID IGUAL NUMERO .

    ENTERO          reduce using rule 10 (var_declaration -> ENTERO ID IGUAL NUMERO .)
    LETRA           reduce using rule 10 (var_declaration -> ENTERO ID IGUAL NUMERO .)
    DE              reduce using rule 10 (var_declaration -> ENTERO ID IGUAL NUMERO .)
    DURANTE         reduce using rule 10 (var_declaration -> ENTERO ID IGUAL NUMERO .)
    SI              reduce using rule 10 (var_declaration -> ENTERO ID IGUAL NUMERO .)
    $end            reduce using rule 10 (var_declaration -> ENTERO ID IGUAL NUMERO .)
    DELIMITADOR2    reduce using rule 10 (var_declaration -> ENTERO ID IGUAL NUMERO .)


state 31

    (12) var_declaration -> LETRA ID IGUAL ID .

    ENTERO          reduce using rule 12 (var_declaration -> LETRA ID IGUAL ID .)
    LETRA           reduce using rule 12 (var_declaration -> LETRA ID IGUAL ID .)
    DE              reduce using rule 12 (var_declaration -> LETRA ID IGUAL ID .)
    DURANTE         reduce using rule 12 (var_declaration -> LETRA ID IGUAL ID .)
    SI              reduce using rule 12 (var_declaration -> LETRA ID IGUAL ID .)
    $end            reduce using rule 12 (var_declaration -> LETRA ID IGUAL ID .)
    DELIMITADOR2    reduce using rule 12 (var_declaration -> LETRA ID IGUAL ID .)


state 32

    (13) var_declaration -> LETRA ID IGUAL CADENA .

    ENTERO          reduce using rule 13 (var_declaration -> LETRA ID IGUAL CADENA .)
    LETRA           reduce using rule 13 (var_declaration -> LETRA ID IGUAL CADENA .)
    DE              reduce using rule 13 (var_declaration -> LETRA ID IGUAL CADENA .)
    DURANTE         reduce using rule 13 (var_declaration -> LETRA ID IGUAL CADENA .)
    SI              reduce using rule 13 (var_declaration -> LETRA ID IGUAL CADENA .)
    $end            reduce using rule 13 (var_declaration -> LETRA ID IGUAL CADENA .)
    DELIMITADOR2    reduce using rule 13 (var_declaration -> LETRA ID IGUAL CADENA .)


state 33

    (17) fun_iteracion -> DE CORCHETE1 var IGUAL . NUMERO SEPARADOR var IGUALIGUAL NUMERO CORCHETE2 cuerpo_estructura

    NUMERO          shift and go to state 44


state 34

    (18) fun_iteracion -> DURANTE CORCHETE1 expression CORCHETE2 . cuerpo_estructura
    (2) cuerpo_estructura -> . DELIMITADOR1 lista_sentencias DELIMITADOR2

    DELIMITADOR1    shift and go to state 46

    cuerpo_estructura              shift and go to state 45

state 35

    (22) expression -> var operadores . var
    (25) expression -> var operadores . NUMERO
    (32) var -> . ID

    NUMERO          shift and go to state 48
    ID              shift and go to state 24

    var                            shift and go to state 47

state 36

    (26) operadores -> MENOR .

    NUMERO          reduce using rule 26 (operadores -> MENOR .)
    ID              reduce using rule 26 (operadores -> MENOR .)


state 37

    (27) operadores -> MENORQUE .

    NUMERO          reduce using rule 27 (operadores -> MENORQUE .)
    ID              reduce using rule 27 (operadores -> MENORQUE .)


state 38

    (28) operadores -> MAYOR .

    NUMERO          reduce using rule 28 (operadores -> MAYOR .)
    ID              reduce using rule 28 (operadores -> MAYOR .)


state 39

    (29) operadores -> MAYORQUE .

    NUMERO          reduce using rule 29 (operadores -> MAYORQUE .)
    ID              reduce using rule 29 (operadores -> MAYORQUE .)


state 40

    (30) operadores -> DIFERENTE .

    NUMERO          reduce using rule 30 (operadores -> DIFERENTE .)
    ID              reduce using rule 30 (operadores -> DIFERENTE .)


state 41

    (31) operadores -> IGUALIGUAL .

    NUMERO          reduce using rule 31 (operadores -> IGUALIGUAL .)
    ID              reduce using rule 31 (operadores -> IGUALIGUAL .)


state 42

    (23) expression -> NUMERO operadores . NUMERO
    (24) expression -> NUMERO operadores . var
    (32) var -> . ID

    NUMERO          shift and go to state 49
    ID              shift and go to state 24

    var                            shift and go to state 50

state 43

    (19) fun_iteracion -> SI CORCHETE1 expression CORCHETE2 . cuerpo_estructura
    (20) fun_iteracion -> SI CORCHETE1 expression CORCHETE2 . cuerpo_estructura SINO cuerpo_estructura
    (21) fun_iteracion -> SI CORCHETE1 expression CORCHETE2 . cuerpo_estructura SINO SI CORCHETE1 expression CORCHETE2 cuerpo_estructura
    (2) cuerpo_estructura -> . DELIMITADOR1 lista_sentencias DELIMITADOR2

    DELIMITADOR1    shift and go to state 46

    cuerpo_estructura              shift and go to state 51

state 44

    (17) fun_iteracion -> DE CORCHETE1 var IGUAL NUMERO . SEPARADOR var IGUALIGUAL NUMERO CORCHETE2 cuerpo_estructura

    SEPARADOR       shift and go to state 52


state 45

    (18) fun_iteracion -> DURANTE CORCHETE1 expression CORCHETE2 cuerpo_estructura .

    DE              reduce using rule 18 (fun_iteracion -> DURANTE CORCHETE1 expression CORCHETE2 cuerpo_estructura .)
    DURANTE         reduce using rule 18 (fun_iteracion -> DURANTE CORCHETE1 expression CORCHETE2 cuerpo_estructura .)
    SI              reduce using rule 18 (fun_iteracion -> DURANTE CORCHETE1 expression CORCHETE2 cuerpo_estructura .)
    ENTERO          reduce using rule 18 (fun_iteracion -> DURANTE CORCHETE1 expression CORCHETE2 cuerpo_estructura .)
    LETRA           reduce using rule 18 (fun_iteracion -> DURANTE CORCHETE1 expression CORCHETE2 cuerpo_estructura .)
    $end            reduce using rule 18 (fun_iteracion -> DURANTE CORCHETE1 expression CORCHETE2 cuerpo_estructura .)
    DELIMITADOR2    reduce using rule 18 (fun_iteracion -> DURANTE CORCHETE1 expression CORCHETE2 cuerpo_estructura .)


state 46

    (2) cuerpo_estructura -> DELIMITADOR1 . lista_sentencias DELIMITADOR2
    (3) lista_sentencias -> . lista_sentencias sentencias
    (4) lista_sentencias -> . empty
    (33) empty -> .

    DELIMITADOR2    reduce using rule 33 (empty -> .)
    ENTERO          reduce using rule 33 (empty -> .)
    LETRA           reduce using rule 33 (empty -> .)
    DE              reduce using rule 33 (empty -> .)
    DURANTE         reduce using rule 33 (empty -> .)
    SI              reduce using rule 33 (empty -> .)

    lista_sentencias               shift and go to state 53
    empty                          shift and go to state 3

state 47

    (22) expression -> var operadores var .

    CORCHETE2       reduce using rule 22 (expression -> var operadores var .)


state 48

    (25) expression -> var operadores NUMERO .

    CORCHETE2       reduce using rule 25 (expression -> var operadores NUMERO .)


state 49

    (23) expression -> NUMERO operadores NUMERO .

    CORCHETE2       reduce using rule 23 (expression -> NUMERO operadores NUMERO .)


state 50

    (24) expression -> NUMERO operadores var .

    CORCHETE2       reduce using rule 24 (expression -> NUMERO operadores var .)


state 51

    (19) fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura .
    (20) fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura . SINO cuerpo_estructura
    (21) fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura . SINO SI CORCHETE1 expression CORCHETE2 cuerpo_estructura

    DE              reduce using rule 19 (fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura .)
    DURANTE         reduce using rule 19 (fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura .)
    SI              reduce using rule 19 (fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura .)
    ENTERO          reduce using rule 19 (fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura .)
    LETRA           reduce using rule 19 (fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura .)
    $end            reduce using rule 19 (fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura .)
    DELIMITADOR2    reduce using rule 19 (fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura .)
    SINO            shift and go to state 54


state 52

    (17) fun_iteracion -> DE CORCHETE1 var IGUAL NUMERO SEPARADOR . var IGUALIGUAL NUMERO CORCHETE2 cuerpo_estructura
    (32) var -> . ID

    ID              shift and go to state 24

    var                            shift and go to state 55

state 53

    (2) cuerpo_estructura -> DELIMITADOR1 lista_sentencias . DELIMITADOR2
    (3) lista_sentencias -> lista_sentencias . sentencias
    (5) sentencias -> . var_declaration
    (6) sentencias -> . fun_declaraciones
    (7) sentencias -> . empty
    (8) var_declaration -> . ENTERO ID
    (9) var_declaration -> . LETRA ID
    (10) var_declaration -> . ENTERO ID IGUAL NUMERO
    (11) var_declaration -> . ENTERO ID IGUAL ID
    (12) var_declaration -> . LETRA ID IGUAL ID
    (13) var_declaration -> . LETRA ID IGUAL CADENA
    (14) var_declaration -> . empty
    (15) fun_declaraciones -> . fun_iteracion fun_declaraciones
    (16) fun_declaraciones -> . empty
    (33) empty -> .
    (17) fun_iteracion -> . DE CORCHETE1 var IGUAL NUMERO SEPARADOR var IGUALIGUAL NUMERO CORCHETE2 cuerpo_estructura
    (18) fun_iteracion -> . DURANTE CORCHETE1 expression CORCHETE2 cuerpo_estructura
    (19) fun_iteracion -> . SI CORCHETE1 expression CORCHETE2 cuerpo_estructura
    (20) fun_iteracion -> . SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO cuerpo_estructura
    (21) fun_iteracion -> . SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO SI CORCHETE1 expression CORCHETE2 cuerpo_estructura

  ! shift/reduce conflict for DELIMITADOR2 resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for LETRA resolved as shift
  ! shift/reduce conflict for DE resolved as shift
  ! shift/reduce conflict for DURANTE resolved as shift
  ! shift/reduce conflict for SI resolved as shift
    DELIMITADOR2    shift and go to state 56
    ENTERO          shift and go to state 8
    LETRA           shift and go to state 9
    DE              shift and go to state 11
    DURANTE         shift and go to state 12
    SI              shift and go to state 13

  ! DELIMITADOR2    [ reduce using rule 33 (empty -> .) ]
  ! ENTERO          [ reduce using rule 33 (empty -> .) ]
  ! LETRA           [ reduce using rule 33 (empty -> .) ]
  ! DE              [ reduce using rule 33 (empty -> .) ]
  ! DURANTE         [ reduce using rule 33 (empty -> .) ]
  ! SI              [ reduce using rule 33 (empty -> .) ]

    sentencias                     shift and go to state 4
    var_declaration                shift and go to state 5
    fun_declaraciones              shift and go to state 6
    empty                          shift and go to state 7
    fun_iteracion                  shift and go to state 10

state 54

    (20) fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO . cuerpo_estructura
    (21) fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO . SI CORCHETE1 expression CORCHETE2 cuerpo_estructura
    (2) cuerpo_estructura -> . DELIMITADOR1 lista_sentencias DELIMITADOR2

    SI              shift and go to state 57
    DELIMITADOR1    shift and go to state 46

    cuerpo_estructura              shift and go to state 58

state 55

    (17) fun_iteracion -> DE CORCHETE1 var IGUAL NUMERO SEPARADOR var . IGUALIGUAL NUMERO CORCHETE2 cuerpo_estructura

    IGUALIGUAL      shift and go to state 59


state 56

    (2) cuerpo_estructura -> DELIMITADOR1 lista_sentencias DELIMITADOR2 .

    DE              reduce using rule 2 (cuerpo_estructura -> DELIMITADOR1 lista_sentencias DELIMITADOR2 .)
    DURANTE         reduce using rule 2 (cuerpo_estructura -> DELIMITADOR1 lista_sentencias DELIMITADOR2 .)
    SI              reduce using rule 2 (cuerpo_estructura -> DELIMITADOR1 lista_sentencias DELIMITADOR2 .)
    ENTERO          reduce using rule 2 (cuerpo_estructura -> DELIMITADOR1 lista_sentencias DELIMITADOR2 .)
    LETRA           reduce using rule 2 (cuerpo_estructura -> DELIMITADOR1 lista_sentencias DELIMITADOR2 .)
    $end            reduce using rule 2 (cuerpo_estructura -> DELIMITADOR1 lista_sentencias DELIMITADOR2 .)
    DELIMITADOR2    reduce using rule 2 (cuerpo_estructura -> DELIMITADOR1 lista_sentencias DELIMITADOR2 .)
    SINO            reduce using rule 2 (cuerpo_estructura -> DELIMITADOR1 lista_sentencias DELIMITADOR2 .)


state 57

    (21) fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO SI . CORCHETE1 expression CORCHETE2 cuerpo_estructura

    CORCHETE1       shift and go to state 60


state 58

    (20) fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO cuerpo_estructura .

    DE              reduce using rule 20 (fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO cuerpo_estructura .)
    DURANTE         reduce using rule 20 (fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO cuerpo_estructura .)
    SI              reduce using rule 20 (fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO cuerpo_estructura .)
    ENTERO          reduce using rule 20 (fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO cuerpo_estructura .)
    LETRA           reduce using rule 20 (fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO cuerpo_estructura .)
    $end            reduce using rule 20 (fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO cuerpo_estructura .)
    DELIMITADOR2    reduce using rule 20 (fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO cuerpo_estructura .)


state 59

    (17) fun_iteracion -> DE CORCHETE1 var IGUAL NUMERO SEPARADOR var IGUALIGUAL . NUMERO CORCHETE2 cuerpo_estructura

    NUMERO          shift and go to state 61


state 60

    (21) fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO SI CORCHETE1 . expression CORCHETE2 cuerpo_estructura
    (22) expression -> . var operadores var
    (23) expression -> . NUMERO operadores NUMERO
    (24) expression -> . NUMERO operadores var
    (25) expression -> . var operadores NUMERO
    (32) var -> . ID

    NUMERO          shift and go to state 27
    ID              shift and go to state 24

    expression                     shift and go to state 62
    var                            shift and go to state 26

state 61

    (17) fun_iteracion -> DE CORCHETE1 var IGUAL NUMERO SEPARADOR var IGUALIGUAL NUMERO . CORCHETE2 cuerpo_estructura

    CORCHETE2       shift and go to state 63


state 62

    (21) fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO SI CORCHETE1 expression . CORCHETE2 cuerpo_estructura

    CORCHETE2       shift and go to state 64


state 63

    (17) fun_iteracion -> DE CORCHETE1 var IGUAL NUMERO SEPARADOR var IGUALIGUAL NUMERO CORCHETE2 . cuerpo_estructura
    (2) cuerpo_estructura -> . DELIMITADOR1 lista_sentencias DELIMITADOR2

    DELIMITADOR1    shift and go to state 46

    cuerpo_estructura              shift and go to state 65

state 64

    (21) fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO SI CORCHETE1 expression CORCHETE2 . cuerpo_estructura
    (2) cuerpo_estructura -> . DELIMITADOR1 lista_sentencias DELIMITADOR2

    DELIMITADOR1    shift and go to state 46

    cuerpo_estructura              shift and go to state 66

state 65

    (17) fun_iteracion -> DE CORCHETE1 var IGUAL NUMERO SEPARADOR var IGUALIGUAL NUMERO CORCHETE2 cuerpo_estructura .

    DE              reduce using rule 17 (fun_iteracion -> DE CORCHETE1 var IGUAL NUMERO SEPARADOR var IGUALIGUAL NUMERO CORCHETE2 cuerpo_estructura .)
    DURANTE         reduce using rule 17 (fun_iteracion -> DE CORCHETE1 var IGUAL NUMERO SEPARADOR var IGUALIGUAL NUMERO CORCHETE2 cuerpo_estructura .)
    SI              reduce using rule 17 (fun_iteracion -> DE CORCHETE1 var IGUAL NUMERO SEPARADOR var IGUALIGUAL NUMERO CORCHETE2 cuerpo_estructura .)
    ENTERO          reduce using rule 17 (fun_iteracion -> DE CORCHETE1 var IGUAL NUMERO SEPARADOR var IGUALIGUAL NUMERO CORCHETE2 cuerpo_estructura .)
    LETRA           reduce using rule 17 (fun_iteracion -> DE CORCHETE1 var IGUAL NUMERO SEPARADOR var IGUALIGUAL NUMERO CORCHETE2 cuerpo_estructura .)
    $end            reduce using rule 17 (fun_iteracion -> DE CORCHETE1 var IGUAL NUMERO SEPARADOR var IGUALIGUAL NUMERO CORCHETE2 cuerpo_estructura .)
    DELIMITADOR2    reduce using rule 17 (fun_iteracion -> DE CORCHETE1 var IGUAL NUMERO SEPARADOR var IGUALIGUAL NUMERO CORCHETE2 cuerpo_estructura .)


state 66

    (21) fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO SI CORCHETE1 expression CORCHETE2 cuerpo_estructura .

    DE              reduce using rule 21 (fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO SI CORCHETE1 expression CORCHETE2 cuerpo_estructura .)
    DURANTE         reduce using rule 21 (fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO SI CORCHETE1 expression CORCHETE2 cuerpo_estructura .)
    SI              reduce using rule 21 (fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO SI CORCHETE1 expression CORCHETE2 cuerpo_estructura .)
    ENTERO          reduce using rule 21 (fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO SI CORCHETE1 expression CORCHETE2 cuerpo_estructura .)
    LETRA           reduce using rule 21 (fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO SI CORCHETE1 expression CORCHETE2 cuerpo_estructura .)
    $end            reduce using rule 21 (fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO SI CORCHETE1 expression CORCHETE2 cuerpo_estructura .)
    DELIMITADOR2    reduce using rule 21 (fun_iteracion -> SI CORCHETE1 expression CORCHETE2 cuerpo_estructura SINO SI CORCHETE1 expression CORCHETE2 cuerpo_estructura .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ENTERO in state 2 resolved as shift
WARNING: shift/reduce conflict for LETRA in state 2 resolved as shift
WARNING: shift/reduce conflict for DE in state 2 resolved as shift
WARNING: shift/reduce conflict for DURANTE in state 2 resolved as shift
WARNING: shift/reduce conflict for SI in state 2 resolved as shift
WARNING: shift/reduce conflict for DE in state 10 resolved as shift
WARNING: shift/reduce conflict for DURANTE in state 10 resolved as shift
WARNING: shift/reduce conflict for SI in state 10 resolved as shift
WARNING: shift/reduce conflict for DELIMITADOR2 in state 53 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 53 resolved as shift
WARNING: shift/reduce conflict for LETRA in state 53 resolved as shift
WARNING: shift/reduce conflict for DE in state 53 resolved as shift
WARNING: shift/reduce conflict for DURANTE in state 53 resolved as shift
WARNING: shift/reduce conflict for SI in state 53 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (cuerpo_fun -> lista_sentencias)
WARNING: rejected rule (empty -> <empty>) in state 2
WARNING: reduce/reduce conflict in state 7 resolved using rule (sentencias -> empty)
WARNING: rejected rule (var_declaration -> empty) in state 7
WARNING: reduce/reduce conflict in state 7 resolved using rule (sentencias -> empty)
WARNING: rejected rule (fun_declaraciones -> empty) in state 7
WARNING: Rule (var_declaration -> empty) is never reduced
